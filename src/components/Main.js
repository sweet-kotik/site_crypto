import React from "react";
import { Link } from "react-router-dom";
import Button from "react-bootstrap/Button";
import Row from "react-bootstrap/Row"
import Col from "react-bootstrap/Col"
import ListGroup from "react-bootstrap/ListGroup"

class Main extends React.Component {
    render() {
        return (
            <div className="main">
                <h1 className="mainHeader">На этом сайте ты можешь воспользоваться множеством способами шифрования!</h1>
                <Row className="justify-content-md-center" >
                    <Col>
                        <h3>Ассинхронное шифрование</h3>
                        <p className="content-text">
                            Асинхронное шифрование, также известное как асимметричное шифрование, является методом криптографии, который использует пару ключей для шифрования и дешифрования данных. Эти ключи включают открытый ключ и закрытый ключ:
                        </p>
                        <p className="content-text">
                            <b>Открытый ключ:</b> Используется для шифрования данных. Этот ключ может быть свободно распространен и доступен всем желающим.
                        </p>
                        <p className="content-text">
                            <b>Закрытый ключ:</b> Используется для дешифрования данных. Этот ключ должен быть строго конфиденциальным и известен только владельцу.
                        </p>
                        <p className="content-text-h">
                            Основные свойства
                        </p>
                        <ListGroup>
                            <ListGroup.Item>
                                <b>Безопасность передачи:</b> Асинхронное шифрование решает проблему безопасной передачи ключей, поскольку для шифрования данных используется открытый ключ, который может быть публичным. Это исключает необходимость предварительной передачи секретного ключа.
                            </ListGroup.Item>
                            <ListGroup.Item>
                                <b>Цифровая подпись:</b> С помощью асимметричного шифрования можно создавать цифровые подписи, которые обеспечивают целостность и подлинность данных. Отправитель подписывает данные своим закрытым ключом, и любой может проверить подлинность подписи с помощью открытого ключа отправителя.
                            </ListGroup.Item>
                            <ListGroup.Item>
                                <b>Шифрование и дешифрование:</b> Шифрование с использованием одного ключа и дешифрование с использованием другого ключа делает систему устойчивой к определенным видам атак, так как даже если кто-то перехватит зашифрованные данные, без закрытого ключа их невозможно расшифровать.
                            </ListGroup.Item>
                        </ListGroup>
                        
                    </Col>
                    <Col>
                        <h3>Синхронное шифрование</h3>
                        <p className="content-text">
                            Синхронное шифрование, также известное как симметричное шифрование, является методом шифрования данных, при котором один и тот же ключ используется как для шифрования, так и для дешифрования данных. В отличие от асимметричного шифрования, которое использует пару ключей (открытый и закрытый), синхронное шифрование требует, чтобы отправитель и получатель данных заранее договорились об одном и том же ключе и держали его в секрете.
                        </p>
                        <p className="content-text-h">
                            Основные свойства
                        </p>
                        <ListGroup>
                            <ListGroup.Item>
                                <b>Единый ключ:</b> Один и тот же ключ используется для шифрования и дешифрования данных. Это делает процесс шифрования быстрым и эффективным, но требует безопасной передачи ключа между участниками.
                            </ListGroup.Item>
                            <ListGroup.Item>
                                <b>Скорость и эффективность:</b> Симметричные алгоритмы шифрования, как правило, быстрее и менее ресурсоемкие по сравнению с асимметричными алгоритмами, что делает их подходящими для шифрования больших объемов данных.
                            </ListGroup.Item>
                            <ListGroup.Item>
                                <b>Безопасность ключа:</b> Основная проблема симметричного шифрования заключается в безопасном обмене ключом. Если ключ будет перехвачен злоумышленником, он сможет легко расшифровать любые зашифрованные данные.
                            </ListGroup.Item>
                        </ListGroup>
                        
                    </Col>
                </Row>
                <Row className="justify-content-md-center">
                    <Col>
                        <Button as={Link} to="#" variant="primary">Попробовать сейчас</Button>
                    </Col>
                    <Col>
                        <Button as={Link} to="/sync" variant="primary">Попробовать сейчас</Button>
                    </Col>
                </Row>
            </div>
        )
    }
}

export default Main